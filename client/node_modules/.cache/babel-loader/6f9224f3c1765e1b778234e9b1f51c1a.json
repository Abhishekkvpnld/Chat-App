{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\components\\\\ChatContainer.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport LogOut from './LogOut';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\nfunction ChatContainer({\n  currentChat,\n  currentUser,\n  socket\n}) {\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        if (currentChat) {\n          const response = await axios.post(getAllMessageRoute, {\n            from: currentUser._id,\n            to: currentChat._id\n          });\n          setMessages(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n  }, [currentUser, currentChat]);\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit('send-msg', {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on('msg-recieve', msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentChat && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, currentChat.username))), /*#__PURE__*/React.createElement(LogOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, messages.map((message, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: uuidv4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: index === messages.length - 1 ? scrollRef : null,\n    className: `message ${message.fromSelf ? 'sended' : 'received'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, message.message)))))), /*#__PURE__*/React.createElement(ChatInput, {\n    handleSendMsg: handleSendMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })));\n}\nconst Container = styled.div`\n  padding-top: 1rem;\n  display: grid;\n  grid-template-rows: 10% 80% 12%;\n  gap: 0.1rem;\n  overflow: hidden;\n\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\n    grid-auto-rows: 15% 80% 15%;\n  }\n\n  .chat-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2rem;\n\n    .user-details {\n      display: flex;\n      align-items: center;\n      gap: 1rem;\n\n      .avatar {\n        img {\n          height: 3rem;\n        }\n      }\n\n      .username {\n        h3 {\n          color: white;\n        }\n      }\n    }\n  }\n\n  .chat-messages {\n    padding: 1rem 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    overflow: auto;\n\n    .message {\n      display: flex;\n      align-items: center;\n\n      .content {\n        max-width: 40%;\n        overflow-wrap: break-word;\n        padding: 1rem;\n        font-size: 1.1rem;\n        border-radius: 1rem;\n        color: #d1d1d1;\n      }\n    }\n\n    .sended {\n      justify-content: flex-end;\n\n      .content {\n        background-color: #4f04ff21;\n      }\n    }\n\n    .received {\n      justify-content: flex-start;\n\n      .content {\n        background-color: #9900ff20;\n      }\n    }\n  }\n`;\nexport default ChatContainer;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","LogOut","ChatInput","axios","v4","uuidv4","getAllMessageRoute","sendMessageRoute","ChatContainer","currentChat","currentUser","socket","scrollRef","messages","setMessages","arrivalMessage","setArrivalMessage","fetchMessages","response","post","from","_id","to","data","error","console","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","_scrollRef$current","scrollIntoView","behavior","createElement","Fragment","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","src","avatarImage","alt","username","map","index","key","ref","length","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/components/ChatContainer.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport LogOut from './LogOut';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\r\n\r\nfunction ChatContainer({ currentChat, currentUser, socket }) {\r\n  const scrollRef = useRef();\r\n  const [messages, setMessages] = useState([]);\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMessages = async () => {\r\n      try {\r\n        if (currentChat) {\r\n          const response = await axios.post(getAllMessageRoute, {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n          });\r\n          setMessages(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n    fetchMessages();\r\n  }, [currentUser, currentChat]);\r\n\r\n  const handleSendMsg = async (msg) => {\r\n    await axios.post(sendMessageRoute, {\r\n      from: currentUser._id,\r\n      to: currentChat._id,\r\n      message: msg,\r\n    });\r\n\r\n    socket.current.emit('send-msg', {\r\n      to: currentChat._id,\r\n      from: currentUser._id,\r\n      message: msg,\r\n    });\r\n\r\n    const msgs = [...messages];\r\n    msgs.push({ fromSelf: true, message: msg });\r\n    setMessages(msgs);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (socket.current) {\r\n      socket.current.on('msg-recieve', (msg) => {\r\n        setArrivalMessage({ fromSelf: false, message: msg });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage && setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <>\r\n      {currentChat && (\r\n        <Container>\r\n          <div className=\"chat-header\">\r\n            <div className=\"user-details\">\r\n              <div className=\"avatar\">\r\n                <img src={`data:image/svg+xml;base64,${currentChat.avatarImage}`} alt=\"avatar\" />\r\n              </div>\r\n              <div className=\"username\">\r\n                <h3>{currentChat.username}</h3>\r\n              </div>\r\n            </div>\r\n            <LogOut />\r\n          </div>\r\n          <div className=\"chat-messages\">\r\n            {messages.map((message, index) => (\r\n              <div key={uuidv4()}>\r\n                <div\r\n                  ref={index === messages.length - 1 ? scrollRef : null}\r\n                  className={`message ${message.fromSelf ? 'sended' : 'received'}`}\r\n                >\r\n                  <div className=\"content\">\r\n                    <p>{message.message}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <ChatInput handleSendMsg={handleSendMsg} />\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding-top: 1rem;\r\n  display: grid;\r\n  grid-template-rows: 10% 80% 12%;\r\n  gap: 0.1rem;\r\n  overflow: hidden;\r\n\r\n  @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n    grid-auto-rows: 15% 80% 15%;\r\n  }\r\n\r\n  .chat-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 2rem;\r\n\r\n    .user-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 1rem;\r\n\r\n      .avatar {\r\n        img {\r\n          height: 3rem;\r\n        }\r\n      }\r\n\r\n      .username {\r\n        h3 {\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .chat-messages {\r\n    padding: 1rem 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 1rem;\r\n    overflow: auto;\r\n\r\n    .message {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .content {\r\n        max-width: 40%;\r\n        overflow-wrap: break-word;\r\n        padding: 1rem;\r\n        font-size: 1.1rem;\r\n        border-radius: 1rem;\r\n        color: #d1d1d1;\r\n      }\r\n    }\r\n\r\n    .sended {\r\n      justify-content: flex-end;\r\n\r\n      .content {\r\n        background-color: #4f04ff21;\r\n      }\r\n    }\r\n\r\n    .received {\r\n      justify-content: flex-start;\r\n\r\n      .content {\r\n        background-color: #9900ff20;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ChatContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}