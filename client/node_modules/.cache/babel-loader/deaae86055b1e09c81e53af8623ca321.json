{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\components\\\\ChatContainer.jsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport LogOut from './LogOut';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport './ChatContainer.css';\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\nimport ChatImage from './ChatImage';\nfunction ChatContainer({\n  currentChat,\n  currentUser,\n  socket\n}) {\n  const scrollRef = useRef();\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        if (currentChat) {\n          const response = await axios.post(getAllMessageRoute, {\n            from: currentUser._id,\n            to: currentChat._id\n          });\n          setMessages(response.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchMessages();\n  }, [currentUser, currentChat]);\n  const handleSendMsg = async (msg, file) => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg,\n      file: file\n    });\n    socket.current.emit(\"send-msg\", {\n      to: currentChat._id,\n      from: currentUser._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, [socket]);\n  useEffect(() => {\n    arrivalMessage && setMessages(pre => [...pre, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    const container = scrollRef.current;\n    if (container) {\n      container.scrollTop = container.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentChat && /*#__PURE__*/React.createElement(Container, {\n    className: \"chat-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, currentChat.username))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LogOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ChatImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), messages.map(message => /*#__PURE__*/React.createElement(\"div\", {\n    ref: scrollRef,\n    key: uuidv4(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `message ${message.fromSelf ? \"sended\" : \"received\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 27\n    }\n  }, message.message.text), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, message.mes)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ChatInput, {\n    handleSendMsg: handleSendMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }))));\n}\nconst Container = styled.div``;\nexport default ChatContainer;","map":{"version":3,"names":["React","useEffect","useRef","useState","styled","LogOut","ChatInput","axios","v4","uuidv4","getAllMessageRoute","sendMessageRoute","ChatImage","ChatContainer","currentChat","currentUser","socket","scrollRef","messages","setMessages","arrivalMessage","setArrivalMessage","fetchMessages","response","post","from","_id","to","data","error","console","handleSendMsg","msg","file","message","current","emit","msgs","push","fromSelf","on","pre","container","scrollTop","scrollHeight","createElement","Fragment","Container","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","src","avatarImage","alt","username","map","ref","key","text","mes","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/components/ChatContainer.jsx"],"sourcesContent":["import React,{useEffect,useRef,useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport LogOut from './LogOut'\r\nimport ChatInput from './ChatInput'\r\nimport axios from 'axios'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport './ChatContainer.css'\r\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes'\r\nimport ChatImage from './ChatImage'\r\n\r\nfunction ChatContainer({currentChat,currentUser,socket}) {\r\n   \r\n    const scrollRef = useRef()\r\n    const [messages,setMessages] = useState([ ])\r\n    const [arrivalMessage,setArrivalMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n              if(currentChat){\r\n                const response = await axios.post(getAllMessageRoute, {\r\n                  from: currentUser._id,\r\n                  to: currentChat._id,\r\n              });\r\n                  setMessages(response.data);\r\n              }   \r\n            } catch (error) {\r\n                console.error(\"Error fetching messages:\", error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n    }, [currentUser,currentChat]);\r\n    \r\n\r\n    const handleSendMsg = async (msg,file) => {\r\n        await axios.post(sendMessageRoute, {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg,\r\n            file:file,\r\n        });\r\n\r\n        socket.current.emit(\"send-msg\",{\r\n          to:currentChat._id,\r\n          from:currentUser._id,\r\n            message:msg\r\n        })\r\n\r\n        const msgs = [...messages]\r\n        msgs.push({fromSelf:true,message:msg})\r\n        setMessages(msgs)\r\n    };\r\n    \r\n    useEffect(()=>{\r\nif(socket.current){\r\n    socket.current.on(\"msg-recieve\",(msg)=>{\r\n      setArrivalMessage({fromSelf:false,message:msg})\r\n    })\r\n}\r\n    },[socket])\r\n\r\nuseEffect(()=>{\r\narrivalMessage && setMessages((pre)=>[...pre,arrivalMessage])\r\n},[arrivalMessage])\r\n\r\nuseEffect(() => {\r\n  const container = scrollRef.current;\r\n  if (container) {\r\n    container.scrollTop = container.scrollHeight;\r\n  }\r\n}, [messages]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n          {currentChat && (\r\n            <Container className='chat-container'>\r\n              <div className=\"chat-header\">\r\n                <div className=\"user-details\">\r\n                  <div className=\"avatar\">\r\n                    <img src={`data:image/svg+xml;base64,${currentChat.avatarImage}`} alt=\"avatar\" />\r\n                  </div>\r\n                  <div className='username'>\r\n                    <h3>{currentChat.username}</h3>\r\n                  </div>\r\n                </div>\r\n                <div><LogOut/></div>\r\n              </div>\r\n              <div className=\"chat-messages\">\r\n                <ChatImage/>\r\n                {\r\n                  messages.map((message) => (\r\n                    <div ref={scrollRef} key={uuidv4()}>\r\n                      <div className={`message ${message.fromSelf ? \"sended\" : \"received\"}`}>\r\n                        <div className=\"content\">\r\n                          <p>{message.message.text}</p>\r\n                          <p>{message.mes}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n              <div className='chat-input'>\r\n              <ChatInput handleSendMsg={handleSendMsg} />\r\n              </div>\r\n             \r\n            </Container>\r\n          )}\r\n        </>\r\n      );\r\n}\r\nconst Container = styled.div``;\r\n\r\nexport default ChatContainer"],"mappings":"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"},"metadata":{},"sourceType":"module"}