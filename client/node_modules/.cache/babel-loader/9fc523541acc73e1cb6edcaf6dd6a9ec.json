{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\components\\\\ChatContainer.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport LogOut from './LogOut';\nimport ChatInput from './ChatInput';\nimport Messages from './Messages';\nimport axios from 'axios';\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes';\nfunction ChatContainer({\n  currentChat,\n  currentUser\n}) {\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.post(getAllMessageRoute, {\n          from: currentUser._id,\n          to: currentChat._id\n        });\n        setMessages(response.data);\n      } catch (error) {\n        console.error(\"Error fetching messages:\", error);\n      }\n    };\n    fetchMessages();\n  }, [currentUser]);\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentChat && /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/svg+xml;base64,${currentChat.avatarImage}`,\n    alt: \"avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, currentChat.username))), /*#__PURE__*/React.createElement(LogOut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }\n  }, messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, message.message))));\n  })), /*#__PURE__*/React.createElement(ChatInput, {\n    handleSendMsg: handleSendMsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }\n  })));\n}\nconst Container = styled.div`\npadding-top:1rem;\n.chat-header {\n    display:flex;\n    justify-content:space-between;\n    align-items:center;\n    padding:0 2rem;\n    .user-details {\n        display:flex;\n        align-items:center;\n        gap:1rem;\n        .avatar {\n            img {\n                height:3rem;\n            }\n        }\n        .username {\n            h3 {\n                color:white;\n            }\n        }\n    }   \n}\n.chat-messages {\n    padding:1rem 2rem;\n    display:flex;\n    flex-di\n\n}\n`;\nexport default ChatContainer;","map":{"version":3,"names":["React","useEffect","useState","styled","LogOut","ChatInput","Messages","axios","getAllMessageRoute","sendMessageRoute","ChatContainer","currentChat","currentUser","messages","setMessages","fetchMessages","response","post","from","_id","to","data","error","console","handleSendMsg","msg","message","createElement","Fragment","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","src","avatarImage","alt","username","map","index","fromSelf","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/components/ChatContainer.jsx"],"sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport LogOut from './LogOut'\r\nimport ChatInput from './ChatInput'\r\nimport Messages from './Messages'\r\nimport axios from 'axios'\r\nimport { getAllMessageRoute, sendMessageRoute } from '../utils/APIRoutes'\r\n\r\nfunction ChatContainer({currentChat,currentUser}) {\r\n\r\n    const [messages,setMessages] = useState([ ])\r\n\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const response = await axios.post(getAllMessageRoute, {\r\n                    from: currentUser._id,\r\n                    to: currentChat._id,\r\n                });\r\n                setMessages(response.data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching messages:\", error);\r\n            }\r\n        };\r\n        fetchMessages();\r\n    }, [currentUser]);\r\n    \r\n\r\n    const handleSendMsg = async (msg) => {\r\n        await axios.post(sendMessageRoute, {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg,\r\n        });\r\n    };\r\n    \r\n\r\n  return (\r\n      <>\r\n      { currentChat && (\r\n<Container>\r\n<div className=\"chat-header\">\r\n    <div className=\"user-details\">\r\n        <div className=\"avatar\">\r\n            <img src={`data:image/svg+xml;base64,${currentChat.avatarImage}`} alt=\"avatar\" />\r\n        </div>\r\n        <div className='username'>\r\n            <h3>{currentChat.username}</h3>\r\n        </div>\r\n    </div>\r\n    <LogOut/>\r\n</div>\r\n<div className=\"chat-messages\">\r\n{\r\n    messages.map((message,index)=>{\r\n        return(\r\n            <div>\r\n                <div className={`message ${message.fromSelf ? \"sended\" : \"recieved\"}`}>\r\n                    <div className=\"content\">\r\n                        <p>{message.message}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n}\r\n</div>\r\n<ChatInput  handleSendMsg={handleSendMsg} />\r\n</Container>\r\n\r\n      )\r\n          \r\n    }\r\n    </>\r\n    )\r\n}\r\nconst Container = styled.div`\r\npadding-top:1rem;\r\n.chat-header {\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    padding:0 2rem;\r\n    .user-details {\r\n        display:flex;\r\n        align-items:center;\r\n        gap:1rem;\r\n        .avatar {\r\n            img {\r\n                height:3rem;\r\n            }\r\n        }\r\n        .username {\r\n            h3 {\r\n                color:white;\r\n            }\r\n        }\r\n    }   \r\n}\r\n.chat-messages {\r\n    padding:1rem 2rem;\r\n    display:flex;\r\n    flex-di\r\n\r\n}\r\n`\r\nexport default ChatContainer"],"mappings":";AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,kBAAkB,EAAEC,gBAAgB,QAAQ,oBAAoB;AAEzE,SAASC,aAAaA,CAAC;EAACC,WAAW;EAACC;AAAW,CAAC,EAAE;EAE9C,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAG,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACZ,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAACT,kBAAkB,EAAE;UAClDU,IAAI,EAAEN,WAAW,CAACO,GAAG;UACrBC,EAAE,EAAET,WAAW,CAACQ;QACpB,CAAC,CAAC;QACFL,WAAW,CAACE,QAAQ,CAACK,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC;IACDP,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,CAACH,WAAW,CAAC,CAAC;EAGjB,MAAMY,aAAa,GAAG,MAAOC,GAAG,IAAK;IACjC,MAAMlB,KAAK,CAACU,IAAI,CAACR,gBAAgB,EAAE;MAC/BS,IAAI,EAAEN,WAAW,CAACO,GAAG;MACrBC,EAAE,EAAET,WAAW,CAACQ,GAAG;MACnBO,OAAO,EAAED;IACb,CAAC,CAAC;EACN,CAAC;EAGH,oBACIzB,KAAA,CAAA2B,aAAA,CAAA3B,KAAA,CAAA4B,QAAA,QACEjB,WAAW,iBACnBX,KAAA,CAAA2B,aAAA,CAACE,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACVnC,KAAA,CAAA2B,aAAA;IAAKS,SAAS,EAAC,aAAa;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBnC,KAAA,CAAA2B,aAAA;IAAKS,SAAS,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBnC,KAAA,CAAA2B,aAAA;IAAKS,SAAS,EAAC,QAAQ;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBnC,KAAA,CAAA2B,aAAA;IAAKU,GAAG,EAAG,6BAA4B1B,WAAW,CAAC2B,WAAY,EAAE;IAACC,GAAG,EAAC,QAAQ;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC/E,CAAC,eACNnC,KAAA,CAAA2B,aAAA;IAAKS,SAAS,EAAC,UAAU;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBnC,KAAA,CAAA2B,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKxB,WAAW,CAAC6B,QAAa,CAC7B,CACJ,CAAC,eACNxC,KAAA,CAAA2B,aAAA,CAACvB,MAAM;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACP,CAAC,eACNnC,KAAA,CAAA2B,aAAA;IAAKS,SAAS,EAAC,eAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAE1BtB,QAAQ,CAAC4B,GAAG,CAAC,CAACf,OAAO,EAACgB,KAAK,KAAG;IAC1B,oBACI1C,KAAA,CAAA2B,aAAA;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACInC,KAAA,CAAA2B,aAAA;MAAKS,SAAS,EAAG,WAAUV,OAAO,CAACiB,QAAQ,GAAG,QAAQ,GAAG,UAAW,EAAE;MAAAb,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAClEnC,KAAA,CAAA2B,aAAA;MAAKS,SAAS,EAAC,SAAS;MAAAN,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACpBnC,KAAA,CAAA2B,aAAA;MAAAG,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAIT,OAAO,CAACA,OAAW,CACtB,CACJ,CACJ,CAAC;EAEd,CAAC,CAEA,CAAC,eACN1B,KAAA,CAAA2B,aAAA,CAACtB,SAAS;IAAEmB,aAAa,EAAEA,aAAc;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChC,CAKL,CAAC;AAEP;AACA,MAAMN,SAAS,GAAG1B,MAAM,CAACyC,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,eAAelC,aAAa"},"metadata":{},"sourceType":"module"}