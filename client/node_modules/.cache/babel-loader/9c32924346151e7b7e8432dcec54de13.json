{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { allUserRoute } from '../../utils/APIRoutes';\nimport Contacts from '../../components/contacts';\nconst [contacts, setContacts] = useState([]);\nconst [currentUser, setCurrentUser] = useState(undefined);\nfunction Chat() {\n  const navigate = useNavigate();\n  useEffect(async () => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate('/login');\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n    }\n  }, []);\n  useEffect(async () => {\n    if (currentUser) {\n      if (currentUser.isAvatarImageSet) {\n        const data = await axios.get(`${allUserRoute}/${currentUser._id}`);\n        setContacts(data.data);\n      } else {\n        navigate('/setAvatar');\n      }\n    }\n  }, [currentUser]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Contacts, {\n    contacts: co,\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  })));\n}\nconst Container = styled.div`\nheight:100vh;\nwidth:100vw;\ndisplay:flex;\nflex-direction:column;\njustify-content:center;\ngap:1rem;\nalign-items:center;\nbackground-color:#131324;\n.container{\n  height:85vh;\n  width:85vw;\n  background-color:#00000076;\n  display:grid:\n  grid-template-column:25% 75%;\n  @media screen and (min-width:720px) and (max-width:1080px){\n    grid-template-column:35% 65%;\n  }\n\n}\n\n\n`;\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","styled","axios","useNavigate","allUserRoute","Contacts","contacts","setContacts","currentUser","setCurrentUser","undefined","Chat","navigate","localStorage","getItem","JSON","parse","isAvatarImageSet","data","get","_id","createElement","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","co","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/pages/Chat/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { allUserRoute } from '../../utils/APIRoutes'\r\nimport Contacts from '../../components/contacts'\r\n\r\nconst [contacts, setContacts] = useState([])\r\nconst [currentUser, setCurrentUser] = useState(undefined)\r\n\r\n\r\nfunction Chat() {\r\n  const navigate = useNavigate()\r\n\r\n  useEffect(async () => {\r\n    if (!localStorage.getItem(\"chat-app-user\")) {\r\n      navigate('/login')\r\n    } else {\r\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(async () => {\r\n    if (currentUser) {\r\n      if (currentUser.isAvatarImageSet) {\r\n        const data = await axios.get(`${allUserRoute}/${currentUser._id}`)\r\n        setContacts(data.data)\r\n      } else {\r\n        navigate('/setAvatar')\r\n      }\r\n    }\r\n  }, [currentUser])\r\n\r\n  return (\r\n    <Container>\r\n      <div className='container'>\r\n        <Contacts contacts={co} currentUser={currentUser} />\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\nheight:100vh;\r\nwidth:100vw;\r\ndisplay:flex;\r\nflex-direction:column;\r\njustify-content:center;\r\ngap:1rem;\r\nalign-items:center;\r\nbackground-color:#131324;\r\n.container{\r\n  height:85vh;\r\n  width:85vw;\r\n  background-color:#00000076;\r\n  display:grid:\r\n  grid-template-column:25% 75%;\r\n  @media screen and (min-width:720px) and (max-width:1080px){\r\n    grid-template-column:35% 65%;\r\n  }\r\n\r\n}\r\n\r\n\r\n`\r\n\r\nexport default Chat"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,uBAAuB;AACpD,OAAOC,QAAQ,MAAM,2BAA2B;AAEhD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;AAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;AAGzD,SAASC,IAAIA,CAAA,EAAG;EACd,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,YAAY;IACpB,IAAI,CAACa,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAE;MAC1CF,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLH,cAAc,CAAC,MAAMM,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;IACzE;EACF,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,YAAY;IACpB,IAAIQ,WAAW,EAAE;MACf,IAAIA,WAAW,CAACS,gBAAgB,EAAE;QAChC,MAAMC,IAAI,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEf,YAAa,IAAGI,WAAW,CAACY,GAAI,EAAC,CAAC;QAClEb,WAAW,CAACW,IAAI,CAACA,IAAI,CAAC;MACxB,CAAC,MAAM;QACLN,QAAQ,CAAC,YAAY,CAAC;MACxB;IACF;EACF,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;EAEjB,oBACEV,KAAA,CAAAuB,aAAA,CAACC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACR9B,KAAA,CAAAuB,aAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB9B,KAAA,CAAAuB,aAAA,CAAChB,QAAQ;IAACC,QAAQ,EAAEwB,EAAG;IAACtB,WAAW,EAAEA,WAAY;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAChD,CACI,CAAC;AAEhB;AACA,MAAMN,SAAS,GAAGrB,MAAM,CAAC8B,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAepB,IAAI"},"metadata":{},"sourceType":"module"}