{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import styled from 'styled-components';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import { allUserRoute } from '../../utils/APIRoutes';\n// import Contacts from '../../components/contacts';\n\n// function Chat() {\n//   const navigate = useNavigate();\n\n//   const [contacts, setContacts] = useState([]);\n//   const [currentUser, setCurrentUser] = useState(undefined);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       if (!localStorage.getItem(\"chat-app-user\")) {\n//         navigate('/login');\n//       } else {\n//         setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n//       }\n//     };\n\n//     fetchData();\n//   }, [navigate]);\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       if (currentUser) {\n//         if (currentUser.isAvatarImageSet) {\n//           const data = await axios.get(`${allUserRoute}/${currentUser._id}`);\n//           setContacts(data.data);\n//         } else {\n//           navigate('/setAvatar');\n//         }\n//       }\n//     };\n\n//     fetchData();\n//   }, [currentUser,navigate]);\n\n//   return (\n//     <Container>\n//       <div className='container'>\n//         {console.log(contacts,currentUser)}\n//         <Contacts contacts={contacts} currentUser={currentUser} />\n//       </div>\n//     </Container>\n//   );\n// }\n\n// const Container = styled.div`\n//   height: 100vh;\n//   width: 100vw;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   gap: 1rem;\n//   align-items: center;\n//   background-color: #131324;\n\n//   .container {\n//     height: 85vh;\n//     width: 85vw;\n//     background-color: #00000076;\n//     display: grid;\n//     grid-template-columns: 25% 75%;\n\n//     @media screen and (min-width: 720px) and (max-width: 1080px) {\n//       grid-template-columns: 35% 65%;\n//     }\n//   }\n// `;\n\n// export default Chat;","map":{"version":3,"names":[],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/pages/Chat/Chat.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import styled from 'styled-components';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { allUserRoute } from '../../utils/APIRoutes';\r\n// import Contacts from '../../components/contacts';\r\n\r\n// function Chat() {\r\n//   const navigate = useNavigate();\r\n\r\n//   const [contacts, setContacts] = useState([]);\r\n//   const [currentUser, setCurrentUser] = useState(undefined);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       if (!localStorage.getItem(\"chat-app-user\")) {\r\n//         navigate('/login');\r\n//       } else {\r\n//         setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [navigate]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       if (currentUser) {\r\n//         if (currentUser.isAvatarImageSet) {\r\n//           const data = await axios.get(`${allUserRoute}/${currentUser._id}`);\r\n//           setContacts(data.data);\r\n//         } else {\r\n//           navigate('/setAvatar');\r\n//         }\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [currentUser,navigate]);\r\n\r\n//   return (\r\n//     <Container>\r\n//       <div className='container'>\r\n//         {console.log(contacts,currentUser)}\r\n//         <Contacts contacts={contacts} currentUser={currentUser} />\r\n//       </div>\r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n// const Container = styled.div`\r\n//   height: 100vh;\r\n//   width: 100vw;\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   justify-content: center;\r\n//   gap: 1rem;\r\n//   align-items: center;\r\n//   background-color: #131324;\r\n\r\n//   .container {\r\n//     height: 85vh;\r\n//     width: 85vw;\r\n//     background-color: #00000076;\r\n//     display: grid;\r\n//     grid-template-columns: 25% 75%;\r\n\r\n//     @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n//       grid-template-columns: 35% 65%;\r\n//     }\r\n//   }\r\n// `;\r\n\r\n// export default Chat;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}