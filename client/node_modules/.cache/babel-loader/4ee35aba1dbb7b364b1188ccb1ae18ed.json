{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { allUserRoute } from '../../utils/APIRoutes';\nimport Contacts from '../../components/Contacts';\nimport Welcome from '../../components/Welcome';\nfunction Chat() {\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!localStorage.getItem(\"chat-app-user\")) {\n        navigate('/login');\n      } else {\n        const storedUser = await localStorage.getItem(\"chat-app-user\");\n        const parsedUser = await JSON.parse(storedUser);\n        setCurrentUser(parsedUser);\n      }\n    };\n    fetchData();\n  }, [navigate]);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (currentUser) {\n        if (currentUser.isAvatarImageSet) {\n          const data = await axios.get(`${allUserRoute}/${currentUser._id}`);\n          console.log('data.data =====' + data.data);\n          setContacts(data.data);\n        } else {\n          navigate('/setAvatar');\n        }\n      }\n    };\n    fetchData();\n  }, [currentUser, navigate]);\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Contacts, {\n    contacts: contacts,\n    currentUser: currentUser,\n    changeChat: handleChatChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Welcome, {\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 1rem;\n  align-items: center;\n  background-color: #131324;\n\n  .container {\n    height: 85vh;\n    width: 85vw;\n    background-color: #00000076;\n    display: grid;\n    grid-template-columns: 25% 75%;\n\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\n      grid-template-columns: 35% 65%;\n    }\n  }\n`;\nexport default Chat;","map":{"version":3,"names":["React","useState","useEffect","styled","axios","useNavigate","allUserRoute","Contacts","Welcome","Chat","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","fetchData","localStorage","getItem","storedUser","parsedUser","JSON","parse","isAvatarImageSet","data","get","_id","console","log","handleChatChange","chat","createElement","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","changeChat","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/pages/Chat/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allUserRoute } from '../../utils/APIRoutes';\r\nimport Contacts from '../../components/Contacts';\r\nimport Welcome from '../../components/Welcome';\r\n\r\nfunction Chat() {\r\n  const navigate = useNavigate();\r\n\r\n  const [contacts, setContacts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat,setCurrentChat] = useState(undefined)\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (!localStorage.getItem(\"chat-app-user\")) {\r\n        navigate('/login');\r\n      } else {\r\n        const storedUser =await localStorage.getItem(\"chat-app-user\");\r\n        const parsedUser = await JSON.parse(storedUser);\r\n      setCurrentUser(parsedUser);\r\n       \r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [navigate]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      if (currentUser) {\r\n        if (currentUser.isAvatarImageSet) {\r\n          const data = await axios.get(`${allUserRoute}/${currentUser._id}`);\r\n          console.log('data.data ====='+data.data)\r\n          setContacts(data.data);\r\n        } else {\r\n          navigate('/setAvatar');\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentUser,navigate]);\r\n\r\nconst handleChatChange = (chat)=>{\r\nsetCurrentChat(chat)\r\n}\r\n\r\n  return (\r\n   \r\n    <Container>\r\n      <div className='container'>\r\n    \r\n        <Contacts contacts={contacts} currentUser={currentUser} changeChat={handleChatChange} />\r\n        <Welcome currentUser={currentUser}/>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  gap: 1rem;\r\n  align-items: center;\r\n  background-color: #131324;\r\n\r\n  .container {\r\n    height: 85vh;\r\n    width: 85vw;\r\n    background-color: #00000076;\r\n    display: grid;\r\n    grid-template-columns: 25% 75%;\r\n\r\n    @media screen and (min-width: 720px) and (max-width: 1080px) {\r\n      grid-template-columns: 35% 65%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}