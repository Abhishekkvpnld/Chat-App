{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\components\\\\ChatInput.jsx\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport EmojiPicker from 'emoji-picker-react';\nimport { IoMdSend } from 'react-icons/io';\nimport { BsEmojiSmileFill } from 'react-icons/bs';\nfunction ChatInput() {\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false);\n  const [msg, setMsg] = useState('');\n  const handleEmojiPickerHideShow = () => {\n    setShowEmojiPicker(!showEmojiPicker);\n  };\n  const handleEmojiClick = (event, emoji) => {\n    console.log(emoji);\n    let message = msg;\n    message += emoji.emoji;\n    setMsg(message);\n  };\n  const sendMsg = e => {\n    i;\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BsEmojiSmileFill, {\n    onClick: handleEmojiPickerHideShow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), showEmojiPicker && /*#__PURE__*/React.createElement(EmojiPicker, {\n    onEmojiClick: handleEmojiClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 40\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"type your message here\",\n    value: msg,\n    onChange: e => setMsg(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IoMdSend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }))));\n}\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 5% 95%;\n  align-items: center;\n  background-color: #080420;\n  padding: 0 2rem;\n  padding-bottom: 0.3rem;\n\n  .button-container {\n    display: flex;\n    align-items: center;\n    color: white;\n    gap: 1rem;\n\n    .emoji {\n      position: relative;\n      z-index:1;\n      svg {\n        font-size: 1.5rem;\n        color: yellow;\n        cursor: pointer;\n      }\n    //   .emoji-picker-react {\n    //     position: absolute;\n    //     margin-bottom:400px;\n    //     width: 300px; \n    //     height: 300px;\n    //     background-color:black;\n    //   }\n    }\n  }\n\n  .input-container {\n    width: 100%;\n    border-radius: 2rem;\n    display: flex;\n    align-content: center;\n    gap:2rem;\n    background-color: #ffffff34;\n\n    input {\n      width: 90%;\n      height: 60%;\n      background-color: transparent;\n      color: white;\n      border: none;\n      padding-left: 5rem;\n      font-size: 2.1rem;\n      &::selection {\n        background-color: #9186f3;\n      }\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    button {\n      padding: 0.1rem 1rem;\n      border-radius: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: yellowgreen;\n      border: none;\n\n      svg {\n        font-size: 2rem;\n        color: white;\n      }\n    }\n  }\n`;\nexport default ChatInput;","map":{"version":3,"names":["React","useState","styled","EmojiPicker","IoMdSend","BsEmojiSmileFill","ChatInput","showEmojiPicker","setShowEmojiPicker","msg","setMsg","handleEmojiPickerHideShow","handleEmojiClick","event","emoji","console","log","message","sendMsg","e","i","createElement","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onEmojiClick","type","placeholder","value","onChange","target","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/components/ChatInput.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport {IoMdSend} from 'react-icons/io'\r\nimport {BsEmojiSmileFill} from 'react-icons/bs'\r\n\r\nfunction ChatInput() { \r\n    const [showEmojiPicker,setShowEmojiPicker] = useState(false)\r\n    const [msg,setMsg] = useState('')\r\n\r\n\r\nconst handleEmojiPickerHideShow = ()=>{\r\n    setShowEmojiPicker(!showEmojiPicker)\r\n}\r\n\r\nconst handleEmojiClick = (event,emoji)=>{\r\n  console.log(emoji)\r\n    let message = msg;\r\n    message += emoji.emoji;\r\n    setMsg(message)\r\n}\r\n\r\nconst sendMsg = (e)=>{\r\ni\r\n}\r\n\r\n  return (\r\n    <Container>\r\n        <div className=\"button-container\">\r\n            <div className=\"emoji\" >\r\n                <BsEmojiSmileFill onClick={handleEmojiPickerHideShow}/>\r\n                {\r\n                    showEmojiPicker && <EmojiPicker  onEmojiClick={handleEmojiClick}/>\r\n                }\r\n            </div>\r\n        </div>\r\n        <form  className=\"input-container\">\r\n            <input type=\"text\" placeholder='type your message here' value={msg} onChange={(e)=>setMsg(e.target.value)} />\r\n            <button className='submit'>\r\n                <IoMdSend/>\r\n            </button>\r\n        </form>\r\n    </Container>\r\n  )\r\n}\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 5% 95%;\r\n  align-items: center;\r\n  background-color: #080420;\r\n  padding: 0 2rem;\r\n  padding-bottom: 0.3rem;\r\n\r\n  .button-container {\r\n    display: flex;\r\n    align-items: center;\r\n    color: white;\r\n    gap: 1rem;\r\n\r\n    .emoji {\r\n      position: relative;\r\n      z-index:1;\r\n      svg {\r\n        font-size: 1.5rem;\r\n        color: yellow;\r\n        cursor: pointer;\r\n      }\r\n    //   .emoji-picker-react {\r\n    //     position: absolute;\r\n    //     margin-bottom:400px;\r\n    //     width: 300px; \r\n    //     height: 300px;\r\n    //     background-color:black;\r\n    //   }\r\n    }\r\n  }\r\n\r\n  .input-container {\r\n    width: 100%;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-content: center;\r\n    gap:2rem;\r\n    background-color: #ffffff34;\r\n\r\n    input {\r\n      width: 90%;\r\n      height: 60%;\r\n      background-color: transparent;\r\n      color: white;\r\n      border: none;\r\n      padding-left: 5rem;\r\n      font-size: 2.1rem;\r\n      &::selection {\r\n        background-color: #9186f3;\r\n      }\r\n\r\n      &:focus {\r\n        outline: none;\r\n      }\r\n    }\r\n\r\n    button {\r\n      padding: 0.1rem 1rem;\r\n      border-radius: 2rem;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      background-color: yellowgreen;\r\n      border: none;\r\n\r\n      svg {\r\n        font-size: 2rem;\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ChatInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}