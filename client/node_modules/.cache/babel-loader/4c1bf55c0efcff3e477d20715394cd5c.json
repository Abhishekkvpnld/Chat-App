{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\Chat App\\\\client\\\\src\\\\pages\\\\Avatar\\\\setAvatar.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport loader from '../../assets/loader.gif';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport icon from \"../../assets/logo.svg\";\nimport { setAvatarRoute } from '../../utils/APIRoutes';\nimport { Buffer } from 'buffer';\nfunction SetAvatar() {\n  const navigate = useNavigate();\n  const api = \"https://api.multiavatar.com/456755\";\n  const [avatars, setAvatars] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: 1,\n    theme: 'light'\n  };\n  const setProfilePicture = () => {\n    // Logic for setting the profile picture\n  };\n  useEffect(async () => {\n    const data = [];\n    for (let i = 0; i < 5; i++) {\n      const image = await axios.get(`${api}/${Math.round(Math.random() * 100)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString('base64'));\n    }\n    setAvatars(data);\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Pick an avatar as your profile picture\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"avatars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, avatars.map((avatar, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: `avatar ${selectedAvatar === index ? 'selected' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `data:image/svg+xml;base64,${avatar}`,\n    alt: `Avatar ${index}`,\n    onClick: () => setSelectedAvatar(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n\n  .title-container {\n    h1 {\n      font-size: 1.5rem;\n      color: #333;\n    }\n  }\n\n  .avatars {\n    display: flex;\n    gap: 1rem;\n\n    .avatar {\n      border: 2px solid #ccc;\n      border-radius: 8px;\n      overflow: hidden;\n      cursor: pointer;\n\n      img {\n        width: 80px;\n        height: 80px;\n        object-fit: cover;\n      }\n\n      &.selected {\n        border-color: #4e0eff;\n        box-shadow: 0 0 8px rgba(78, 14, 255, 0.5);\n      }\n    }\n  }\n`;\nexport default SetAvatar;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","toast","ToastContainer","loader","styled","axios","icon","setAvatarRoute","Buffer","SetAvatar","navigate","api","avatars","setAvatars","isLoading","setIsLoading","selectedAvatar","setSelectedAvatar","undefined","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","setProfilePicture","data","i","image","get","Math","round","random","buffer","push","toString","createElement","Container","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","map","avatar","index","key","src","alt","onClick","div"],"sources":["C:/Users/JISHN/Documents/projects/Chat App/client/src/pages/Avatar/setAvatar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport loader from '../../assets/loader.gif';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport icon from '../../assets/logo.svg';\r\nimport { setAvatarRoute } from '../../utils/APIRoutes';\r\nimport { Buffer } from 'buffer';\r\n\r\nfunction SetAvatar() {\r\n  const navigate = useNavigate();\r\n  const api = \"https://api.multiavatar.com/456755\";\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedAvatar, setSelectedAvatar] = useState(undefined);\r\n  const toastOptions = {\r\n    position: \"bottom-right\",\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: 1,\r\n    theme: 'light',\r\n  };\r\n\r\n  const setProfilePicture = () => {\r\n    // Logic for setting the profile picture\r\n  };\r\n\r\n  useEffect(async () => {\r\n    const data = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      const image = await axios.get(\r\n        `${api}/${Math.round(Math.random() * 100)}`\r\n      );\r\n      const buffer = new Buffer(image.data);\r\n      data.push(buffer.toString('base64'));\r\n    }\r\n    setAvatars(data);\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <div className='title-container'>\r\n        <h1>Pick an avatar as your profile picture</h1>\r\n      </div>\r\n      <div className='avatars'>\r\n        {avatars.map((avatar, index) => (\r\n          <div key={index} className={`avatar ${selectedAvatar === index ? 'selected' : ''}`}>\r\n            <img\r\n              src={`data:image/svg+xml;base64,${avatar}`}\r\n              alt={`Avatar ${index}`}\r\n              onClick={() => setSelectedAvatar(index)}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <ToastContainer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 1rem;\r\n\r\n  .title-container {\r\n    h1 {\r\n      font-size: 1.5rem;\r\n      color: #333;\r\n    }\r\n  }\r\n\r\n  .avatars {\r\n    display: flex;\r\n    gap: 1rem;\r\n\r\n    .avatar {\r\n      border: 2px solid #ccc;\r\n      border-radius: 8px;\r\n      overflow: hidden;\r\n      cursor: pointer;\r\n\r\n      img {\r\n        width: 80px;\r\n        height: 80px;\r\n        object-fit: cover;\r\n      }\r\n\r\n      &.selected {\r\n        border-color: #4e0eff;\r\n        box-shadow: 0 0 8px rgba(78, 14, 255, 0.5);\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SetAvatar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}